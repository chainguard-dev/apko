version: "2"
run:
  issues-exit-code: 1
linters:
  enable:
    - asciicheck
    - errorlint
    - forbidigo
    - gocritic
    - gosec
    - importas
    - misspell
    - prealloc
    - staticcheck
    - tparallel
    - unconvert
    - unparam
    - whitespace
  settings:
    forbidigo:
      forbid:
        - pattern: ^print.*$
        - pattern: ^os\.Create$
          msg: os.Create creates files with 666 permissions, use os.OpenFile(<FILE_NAME>, os.O_CREATE|os.O_TRUNC|os.O_RDWR, 0o644) instead.
      # This makes it possible to handle import renaming and forbid struct fields and methods.
      analyze-types: true
    goheader:
      values:
        regexp:
          ws: \s*
      template-path: header.tmpl
    gosec:
      excludes:
        - G115
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - linters:
          - errcheck
          - gosec
        path: _test\.go
    paths:
      - third_party$
      - builtin$
      - examples$
issues:
  max-issues-per-linter: 0
  max-same-issues: 0
formatters:
  enable:
    - gofmt
    - goimports
  settings:
    goimports:
      local-prefixes:
        - chainguard.dev/apko
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
