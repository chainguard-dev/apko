name: Release

on:
  schedule:
    - cron: '0 0 * * 1' # every Monday at 00:00 UTC
  workflow_dispatch:

permissions: {}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    # https://docs.github.com/en/actions/reference/authentication-in-a-workflow
    permissions:
      id-token: write
      contents: write

    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Check if any changes since last release
        id: check
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch --tags
          TAG=$(git tag --points-at HEAD)
          if [ -z "$TAG" ]; then
            echo "No tag points at HEAD, so we need a new tag and then a new release."
            echo "need_release=yes" >> $GITHUB_OUTPUT
          else
            RELEASE=$(gh release view "$TAG" --json tagName --jq '.tagName' || echo "none")
            if [ "$RELEASE" == "$TAG" ]; then
              echo "A release exists for tag $TAG, which has the latest changes, so no need for a new tag or release."
              echo "need_release=no" >> $GITHUB_OUTPUT
            else
              echo "Tag $TAG exists, but no release is associated. Need a new release."
              echo "need_release=yes" >> $GITHUB_OUTPUT
              echo "existing_tag=$TAG" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Bump version and push tag
        id: create_tag
        uses: mathieudutour/github-tag-action@a22cf08638b34d5badda920f9daf6e72c477b07b # v6.2
        if: steps.check.outputs.need_release == 'yes' && steps.check.outputs.existing_tag == ''
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        if: steps.check.outputs.need_release == 'yes'
        with:
          ref: ${{ steps.check.outputs.existing_tag || steps.create_tag.outputs.new_tag }}

      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        if: steps.check.outputs.need_release == 'yes'
        with:
          go-version-file: './go.mod'
          check-latest: true

      # Cosign is used by goreleaser to sign release artifacts.
      - uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0
        if: steps.check.outputs.need_release == 'yes'

      - uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        if: steps.check.outputs.need_release == 'yes'
        with:
          version: latest
          install-only: true

      - name: Release
        if: steps.check.outputs.need_release == 'yes'
        run: make release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ steps.check.outputs.existing_tag || steps.create_tag.outputs.new_tag }}
